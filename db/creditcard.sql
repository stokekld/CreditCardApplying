-- MySQL Script generated by MySQL Workbench
-- mié 26 abr 2017 14:56:22 CDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema creditcard
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `creditcard` ;

-- -----------------------------------------------------
-- Schema creditcard
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `creditcard` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `creditcard` ;

-- -----------------------------------------------------
-- Table `creditcard`.`tipo_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditcard`.`tipo_usuario` ;

CREATE TABLE IF NOT EXISTS `creditcard`.`tipo_usuario` (
  `id_tipo_usuario` INT NOT NULL AUTO_INCREMENT,
  `tipo_usuario` VARCHAR(20) NOT NULL,
  `nivel` INT NOT NULL,
  PRIMARY KEY (`id_tipo_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditcard`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditcard`.`usuario` ;

CREATE TABLE IF NOT EXISTS `creditcard`.`usuario` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `id_tipo_usuario` INT NOT NULL,
  `jefe_id_usuario` INT NOT NULL,
  `us_nombre` VARCHAR(30) NOT NULL,
  `us_apat` VARCHAR(30) NOT NULL,
  `us_amat` VARCHAR(30) NOT NULL,
  `us_celular` VARCHAR(30) NULL,
  `us_email` VARCHAR(45) NULL,
  `us_user` VARCHAR(15) NOT NULL,
  `us_pass` VARCHAR(35) NOT NULL,
  PRIMARY KEY (`id_usuario`),
  INDEX `fk_usuarios_tipo_user_idx` (`id_tipo_usuario` ASC),
  INDEX `fk_usuario_usuario1_idx` (`jefe_id_usuario` ASC),
  UNIQUE INDEX `us_user_UNIQUE` (`us_user` ASC),
  CONSTRAINT `fk_usuarios_tipo_user`
    FOREIGN KEY (`id_tipo_usuario`)
    REFERENCES `creditcard`.`tipo_usuario` (`id_tipo_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_usuario1`
    FOREIGN KEY (`jefe_id_usuario`)
    REFERENCES `creditcard`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditcard`.`producto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditcard`.`producto` ;

CREATE TABLE IF NOT EXISTS `creditcard`.`producto` (
  `id_producto` INT NOT NULL AUTO_INCREMENT,
  `producto` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`id_producto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditcard`.`situacionAgen`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditcard`.`situacionAgen` ;

CREATE TABLE IF NOT EXISTS `creditcard`.`situacionAgen` (
  `id_situacionAgen` INT NOT NULL AUTO_INCREMENT,
  `situacionAgen` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id_situacionAgen`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditcard`.`statusFinal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditcard`.`statusFinal` ;

CREATE TABLE IF NOT EXISTS `creditcard`.`statusFinal` (
  `id_statusFinal` INT NOT NULL AUTO_INCREMENT,
  `statusFinal` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`id_statusFinal`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditcard`.`lugarApertura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditcard`.`lugarApertura` ;

CREATE TABLE IF NOT EXISTS `creditcard`.`lugarApertura` (
  `id_lugarApertura` INT NOT NULL AUTO_INCREMENT,
  `lugarApertura` VARCHAR(80) NOT NULL,
  PRIMARY KEY (`id_lugarApertura`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditcard`.`localidad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditcard`.`localidad` ;

CREATE TABLE IF NOT EXISTS `creditcard`.`localidad` (
  `id_localidad` INT NOT NULL AUTO_INCREMENT,
  `localidad` VARCHAR(80) NOT NULL,
  PRIMARY KEY (`id_localidad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditcard`.`causaRechazo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditcard`.`causaRechazo` ;

CREATE TABLE IF NOT EXISTS `creditcard`.`causaRechazo` (
  `id_causaRechazo` INT NOT NULL AUTO_INCREMENT,
  `causaRechazo` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`id_causaRechazo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditcard`.`solicitud`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditcard`.`solicitud` ;

CREATE TABLE IF NOT EXISTS `creditcard`.`solicitud` (
  `id_solicitud` INT NOT NULL AUTO_INCREMENT,
  `id_usuario` INT NOT NULL,
  `id_producto` INT NOT NULL,
  `folio` VARCHAR(30) NOT NULL,
  `sol_nombre` VARCHAR(30) NOT NULL,
  `sol_apat` VARCHAR(30) NOT NULL,
  `sol_amat` VARCHAR(30) NOT NULL,
  `lada` VARCHAR(10) NULL,
  `telefono` VARCHAR(20) NULL,
  `email` VARCHAR(50) NOT NULL,
  `id_lugarApertura` INT NOT NULL,
  `id_localidad` INT NOT NULL,
  `dictamen` ENUM('APROBADO', 'APROBADO PRECLAS', 'PREAPROBADO', 'DECLINADO', 'RECHAZADO') NULL,
  `semaforo` ENUM('S/N', 'ROJO', 'VERDE', 'AMBAR', 'AMARILLO', 'AZUL') NULL,
  `fechaCaptura` DATE NOT NULL,
  `fechaDecision` DATE NOT NULL,
  `id_situacionAgen` INT NOT NULL,
  `situacionSol` ENUM('EN PROCESO AGENCIA', 'EN PROCESO BANCO', 'NO RECHAZADO', 'RECHAZADO') NULL,
  `id_statusFinal` INT NOT NULL,
  `id_causaRechazo` INT NULL,
  `fechaCarga` DATE NOT NULL,
  `fechaVigencia` DATE NOT NULL,
  `cuestionario` ENUM('SI','NO', 'NO NECESITA') NOT NULL,
  `tokenEfi` VARCHAR(20) NOT NULL,
  `formalizada` ENUM('SI','NO') NOT NULL,
  `fechaFormal` DATE NOT NULL,
  `codigoCliente` VARCHAR(20) NOT NULL,
  `puntoVenta` VARCHAR(60) NULL,
  `observacion` TEXT NULL,
  PRIMARY KEY (`id_solicitud`),
  INDEX `fk_solicitud_usuario1_idx` (`id_usuario` ASC),
  INDEX `fk_solicitud_producto1_idx` (`id_producto` ASC),
  UNIQUE INDEX `folio_UNIQUE` (`folio` ASC),
  INDEX `fk_solicitud_situacionAgen1_idx` (`id_situacionAgen` ASC),
  INDEX `fk_solicitud_statusFinal1_idx` (`id_statusFinal` ASC),
  INDEX `fk_solicitud_lugarApertura1_idx` (`id_lugarApertura` ASC),
  INDEX `fk_solicitud_localidad1_idx` (`id_localidad` ASC),
  INDEX `fk_solicitud_causaRechazo1_idx` (`id_causaRechazo` ASC),
  CONSTRAINT `fk_solicitud_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `creditcard`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_solicitud_producto1`
    FOREIGN KEY (`id_producto`)
    REFERENCES `creditcard`.`producto` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_solicitud_situacionAgen1`
    FOREIGN KEY (`id_situacionAgen`)
    REFERENCES `creditcard`.`situacionAgen` (`id_situacionAgen`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_solicitud_statusFinal1`
    FOREIGN KEY (`id_statusFinal`)
    REFERENCES `creditcard`.`statusFinal` (`id_statusFinal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_solicitud_lugarApertura1`
    FOREIGN KEY (`id_lugarApertura`)
    REFERENCES `creditcard`.`lugarApertura` (`id_lugarApertura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_solicitud_localidad1`
    FOREIGN KEY (`id_localidad`)
    REFERENCES `creditcard`.`localidad` (`id_localidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_solicitud_causaRechazo1`
    FOREIGN KEY (`id_causaRechazo`)
    REFERENCES `creditcard`.`causaRechazo` (`id_causaRechazo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditcard`.`referencia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditcard`.`referencia` ;

CREATE TABLE IF NOT EXISTS `creditcard`.`referencia` (
  `id_referencia` INT NOT NULL AUTO_INCREMENT,
  `id_solicitud` INT NOT NULL,
  `ref_nombre` VARCHAR(30) NOT NULL,
  `ref_apat` VARCHAR(30) NOT NULL,
  `ref_amat` VARCHAR(30) NOT NULL,
  `ref_telCasa` VARCHAR(30) NULL,
  `ref_telOp` VARCHAR(30) NULL,
  PRIMARY KEY (`id_referencia`),
  INDEX `fk_referencia_solicitud1_idx` (`id_solicitud` ASC),
  CONSTRAINT `fk_referencia_solicitud1`
    FOREIGN KEY (`id_solicitud`)
    REFERENCES `creditcard`.`solicitud` (`id_solicitud`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditcard`.`universidad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditcard`.`universidad` ;

CREATE TABLE IF NOT EXISTS `creditcard`.`universidad` (
  `id_universidad` INT NOT NULL,
  `universidad` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_universidad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditcard`.`zero`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditcard`.`zero` ;

CREATE TABLE IF NOT EXISTS `creditcard`.`zero` (
  `id_zero` INT NOT NULL,
  `id_solicitud` INT NOT NULL,
  `id_universidad` INT NOT NULL,
  `universidad` VARCHAR(45) NULL,
  `campus` VARCHAR(45) NULL,
  `carrera` VARCHAR(45) NULL,
  `colegiatura` FLOAT NULL,
  `financiamiento` ENUM('BECA', 'CRÉDITO', 'SIN BECA', 'SIN CRÉDITO') NULL,
  `ingresoFam` FLOAT NULL,
  `procentajeBeca` FLOAT NULL,
  `gradoEsc` VARCHAR(45) NULL,
  PRIMARY KEY (`id_zero`),
  INDEX `fk_zero_solicitud1_idx` (`id_solicitud` ASC),
  INDEX `fk_zero_universidad1_idx` (`id_universidad` ASC),
  CONSTRAINT `fk_zero_solicitud1`
    FOREIGN KEY (`id_solicitud`)
    REFERENCES `creditcard`.`solicitud` (`id_solicitud`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_zero_universidad1`
    FOREIGN KEY (`id_universidad`)
    REFERENCES `creditcard`.`universidad` (`id_universidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `creditcard`.`tipo_usuario`
-- -----------------------------------------------------
START TRANSACTION;
USE `creditcard`;
INSERT INTO `creditcard`.`tipo_usuario` (`id_tipo_usuario`, `tipo_usuario`, `nivel`) VALUES (1, 'Jefe', 1);
INSERT INTO `creditcard`.`tipo_usuario` (`id_tipo_usuario`, `tipo_usuario`, `nivel`) VALUES (2, 'Secretaria Jefe', 2);
INSERT INTO `creditcard`.`tipo_usuario` (`id_tipo_usuario`, `tipo_usuario`, `nivel`) VALUES (3, 'Gerente', 3);
INSERT INTO `creditcard`.`tipo_usuario` (`id_tipo_usuario`, `tipo_usuario`, `nivel`) VALUES (4, 'Secretaria Gerente', 4);
INSERT INTO `creditcard`.`tipo_usuario` (`id_tipo_usuario`, `tipo_usuario`, `nivel`) VALUES (5, 'Promotor', 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `creditcard`.`usuario`
-- -----------------------------------------------------
START TRANSACTION;
USE `creditcard`;
INSERT INTO `creditcard`.`usuario` (`id_usuario`, `id_tipo_usuario`, `jefe_id_usuario`, `us_nombre`, `us_apat`, `us_amat`, `us_celular`, `us_email`, `us_user`, `us_pass`) VALUES (1, 1, 1, 'Jesus', 'Lopez', 'Lopez', '', '', 'root', '63a9f0ea7bb98050796b649e85481845');

COMMIT;


-- -----------------------------------------------------
-- Data for table `creditcard`.`producto`
-- -----------------------------------------------------
START TRANSACTION;
USE `creditcard`;
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (1, 'LIGHT');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (2, 'PLATINO MC');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (3, 'ZERO');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (4, 'ORO VISA');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (5, 'AMWAY');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (6, 'BLACK UNLIMITED');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (7, 'BLACK');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (8, 'FIESTA REWARDS PLATINO');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (9, 'CLÁSICA MC');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (10, 'ORO MC');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (11, 'FERRARI');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (12, 'SANTANDER AMEX');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (13, 'UNI SANTANDER-K/FREE');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (14, 'FIESTA REWARDS ORO');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (15, 'CLÁSICA VISA');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (16, 'ORO CASH');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (17, 'WORLD ELITE');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (18, 'DELTA ORO');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (19, 'ELITE REWARDS PLATINO');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (20, 'ELITE REWARDS ORO');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (21, 'FLEXCARD');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (22, 'SANTANDER IBERIA');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (23, 'SANTANDER ACCESS');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (24, 'DELTA PLATINO');
INSERT INTO `creditcard`.`producto` (`id_producto`, `producto`) VALUES (25, 'ELITE REWARDS CLÁSICA');

COMMIT;


-- -----------------------------------------------------
-- Data for table `creditcard`.`situacionAgen`
-- -----------------------------------------------------
START TRANSACTION;
USE `creditcard`;
INSERT INTO `creditcard`.`situacionAgen` (`id_situacionAgen`, `situacionAgen`) VALUES (1, 'DECLINADA');
INSERT INTO `creditcard`.`situacionAgen` (`id_situacionAgen`, `situacionAgen`) VALUES (2, 'PENDIENTE AUTENTICACIÓN');
INSERT INTO `creditcard`.`situacionAgen` (`id_situacionAgen`, `situacionAgen`) VALUES (3, 'PENDIENTE CAPTURA EVALUACIÓN');
INSERT INTO `creditcard`.`situacionAgen` (`id_situacionAgen`, `situacionAgen`) VALUES (4, 'PENDIENTE CAPTURA EVALUACIÓN, FALTA CUESTIONARIO');
INSERT INTO `creditcard`.`situacionAgen` (`id_situacionAgen`, `situacionAgen`) VALUES (5, 'PENDIENTE CAPTURA REFERENCIAS');
INSERT INTO `creditcard`.`situacionAgen` (`id_situacionAgen`, `situacionAgen`) VALUES (6, 'PENDIENTE CAPTURA REFERENCIAS, FALTA CUESTIONARIO');
INSERT INTO `creditcard`.`situacionAgen` (`id_situacionAgen`, `situacionAgen`) VALUES (7, 'PENDIENTE CAPTURA REFERENCIAS, PENDIENTE DOCUMENTO');
INSERT INTO `creditcard`.`situacionAgen` (`id_situacionAgen`, `situacionAgen`) VALUES (8, 'PENDIENTE PERFILADOR');
INSERT INTO `creditcard`.`situacionAgen` (`id_situacionAgen`, `situacionAgen`) VALUES (9, 'SOLICITUD FINALIZADA');
INSERT INTO `creditcard`.`situacionAgen` (`id_situacionAgen`, `situacionAgen`) VALUES (10, 'SOLICITUD FINALIZADA, FALTA CUESTIONARIO');
INSERT INTO `creditcard`.`situacionAgen` (`id_situacionAgen`, `situacionAgen`) VALUES (11, 'SOLICITUD FINALIZADA, PENDIENTE DOCUMENTO');

COMMIT;


-- -----------------------------------------------------
-- Data for table `creditcard`.`statusFinal`
-- -----------------------------------------------------
START TRANSACTION;
USE `creditcard`;
INSERT INTO `creditcard`.`statusFinal` (`id_statusFinal`, `statusFinal`) VALUES (1, 'APROBADO');
INSERT INTO `creditcard`.`statusFinal` (`id_statusFinal`, `statusFinal`) VALUES (2, 'DECLINADO');
INSERT INTO `creditcard`.`statusFinal` (`id_statusFinal`, `statusFinal`) VALUES (3, 'EN PROCESO AGENCIA');
INSERT INTO `creditcard`.`statusFinal` (`id_statusFinal`, `statusFinal`) VALUES (4, 'EN PROCESO BANCO');
INSERT INTO `creditcard`.`statusFinal` (`id_statusFinal`, `statusFinal`) VALUES (5, 'RECHAZO ADMISION');
INSERT INTO `creditcard`.`statusFinal` (`id_statusFinal`, `statusFinal`) VALUES (6, 'RECHAZO AUTENTICACION');
INSERT INTO `creditcard`.`statusFinal` (`id_statusFinal`, `statusFinal`) VALUES (7, 'RECHAZO GARRA ');

COMMIT;


-- -----------------------------------------------------
-- Data for table `creditcard`.`lugarApertura`
-- -----------------------------------------------------
START TRANSACTION;
USE `creditcard`;
INSERT INTO `creditcard`.`lugarApertura` (`id_lugarApertura`, `lugarApertura`) VALUES (1, 'LUGAR1');
INSERT INTO `creditcard`.`lugarApertura` (`id_lugarApertura`, `lugarApertura`) VALUES (2, 'LUGAR2');
INSERT INTO `creditcard`.`lugarApertura` (`id_lugarApertura`, `lugarApertura`) VALUES (3, 'LUGAR3');

COMMIT;


-- -----------------------------------------------------
-- Data for table `creditcard`.`localidad`
-- -----------------------------------------------------
START TRANSACTION;
USE `creditcard`;
INSERT INTO `creditcard`.`localidad` (`id_localidad`, `localidad`) VALUES (1, 'LOCALIDAD1');
INSERT INTO `creditcard`.`localidad` (`id_localidad`, `localidad`) VALUES (2, 'LOCALIDAD2');
INSERT INTO `creditcard`.`localidad` (`id_localidad`, `localidad`) VALUES (3, 'LOCALIDAD3');

COMMIT;


-- -----------------------------------------------------
-- Data for table `creditcard`.`causaRechazo`
-- -----------------------------------------------------
START TRANSACTION;
USE `creditcard`;
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (1, 'CLIENTE DUPLICADO POR NOMBRE Y CP');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (2, 'CLIENTE DUPLICADO POR RFC Y CP');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (3, 'CODIGO POSTAL INEXISTENTE');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (4, 'CODIGO UNIVERSIDAD INEXISTENTE');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (5, 'DENEGADA RESCATABLE (MANUAL)');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (6, 'DENEGADO AUTOMÁTICO');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (7, 'ERROR CAMPO MAL INFORMADO O SIN PEDESLOC');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (8, 'ERROR CLIENTE PROSPECTO PECONPER');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (9, 'ERROR CLIENTE PROSPECTO PECONPER');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (10, 'ERROR DOMICILIO CONOCIDO');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (11, 'ERROR LOCALIZACÓN P ARCIAL EN N PECODNEG');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (12, 'MAIL REPETIDO EN CATALOGO');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (13, 'MAIL REPETIDO EN REMESA MAS DE 5 VESES');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (14, 'NO SE PUEDE REALIZAR ALTA. INTERVINIENTE TIENE SOLICITUDES ACTIVAS');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (15, 'PERSONA DUPLICADA EN CARGA MASIVA');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (16, 'RECHAZO ADMISIÓN');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (17, 'RECHAZO AUTENTICACIÓN');
INSERT INTO `creditcard`.`causaRechazo` (`id_causaRechazo`, `causaRechazo`) VALUES (18, 'TELEFONO DE TITULAR EN TELEFONO DE REFERENCIAS');

COMMIT;


-- -----------------------------------------------------
-- Data for table `creditcard`.`universidad`
-- -----------------------------------------------------
START TRANSACTION;
USE `creditcard`;
INSERT INTO `creditcard`.`universidad` (`id_universidad`, `universidad`) VALUES (1, 'UNIVERSIDAD1');
INSERT INTO `creditcard`.`universidad` (`id_universidad`, `universidad`) VALUES (2, 'UNIVERSIDAD2');
INSERT INTO `creditcard`.`universidad` (`id_universidad`, `universidad`) VALUES (3, 'UNIVERSIDAD3');

COMMIT;

